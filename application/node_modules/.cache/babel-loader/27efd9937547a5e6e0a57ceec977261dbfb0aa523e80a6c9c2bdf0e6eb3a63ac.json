{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghaze\\\\OneDrive\\\\Bureau\\\\PFA new version 1\\\\PFA new version\\\\application\\\\src\\\\Pages\\\\Organisation\\\\InscriptionsWorkshopsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './InscriptionFo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InscriptionsWorkshopsTable = () => {\n  _s();\n  const [inscriptions, setInscriptions] = useState([]);\n  useEffect(() => {\n    // Fetch data from the Express.js API\n    fetch('http://localhost:5000/getEnrolledStudentsPerWorkshop').then(response => response.json()).then(data => setInscriptions(data)).catch(error => console.error('Error fetching inscriptionsWorkshops:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      sty: true,\n      children: \"Inscriptions Formations.. check your name bellow \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Workshop Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Workshop ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inscriptions.map(inscription => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: inscription.workshopName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: inscription.workshopId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Enrolled Students :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this), inscription.students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Student First Name : \", student.studentFirstName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Student Last Name : \", student.studentLastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Student Email: \", student.studentEmail]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Student Code: \", student.studentCode]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this)]\n              }, `${student.studentFirstName}-${student.studentLastName}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, `${inscription.workshopName}-${inscription.workshopId}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(InscriptionsWorkshopsTable, \"5o1cMgN42+RBL4Z6dnt8Kv8c9hU=\");\n_c = InscriptionsWorkshopsTable;\nexport default InscriptionsWorkshopsTable;\nvar _c;\n$RefreshReg$(_c, \"InscriptionsWorkshopsTable\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","InscriptionsWorkshopsTable","_s","inscriptions","setInscriptions","fetch","then","response","json","data","catch","error","console","children","sty","fileName","_jsxFileName","lineNumber","columnNumber","border","map","inscription","workshopName","workshopId","students","student","studentFirstName","studentLastName","studentEmail","studentCode","_c","$RefreshReg$"],"sources":["C:/Users/ghaze/OneDrive/Bureau/PFA new version 1/PFA new version/application/src/Pages/Organisation/InscriptionsWorkshopsTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './InscriptionFo.css';\r\n\r\n\r\nconst InscriptionsWorkshopsTable = () => {\r\n  const [inscriptions, setInscriptions] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Fetch data from the Express.js API\r\n    fetch('http://localhost:5000/getEnrolledStudentsPerWorkshop')\r\n      .then(response => response.json())\r\n      .then(data => setInscriptions(data))\r\n      .catch(error => console.error('Error fetching inscriptionsWorkshops:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2 sty>Inscriptions Formations.. check your name bellow </h2>\r\n      <table border={1}>\r\n        <thead>\r\n          <tr>\r\n            <th>Workshop Name</th>\r\n            <th>Workshop ID</th>\r\n            <th>Students</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {inscriptions.map(inscription => (\r\n            <tr key={`${inscription.workshopName}-${inscription.workshopId}`}>\r\n              <td>{inscription.workshopName}</td>\r\n              <td>{inscription.workshopId}</td>\r\n              <td>\r\n                <ul>\r\n                    <h3>Enrolled Students :</h3>\r\n                  {inscription.students.map(student => (\r\n                    <li key={`${student.studentFirstName}-${student.studentLastName}`}>\r\n                      <p>Student First Name : {student.studentFirstName}</p>\r\n                      <p>Student Last Name : {student.studentLastName}</p>\r\n                      <p>Student Email: {student.studentEmail}</p>\r\n                      <p>Student Code: {student.studentCode}</p>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InscriptionsWorkshopsTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}