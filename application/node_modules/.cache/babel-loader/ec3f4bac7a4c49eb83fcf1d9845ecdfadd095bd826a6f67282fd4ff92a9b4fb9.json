{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghaze\\\\OneDrive\\\\Bureau\\\\PFA new version 1\\\\PFA new version\\\\application\\\\src\\\\Pages\\\\FormationPage\\\\FormationElement.js\",\n  _s = $RefreshSig$();\n// import React, useEffect and useState from react\nimport React, { useEffect, useState } from 'react';\n\n// import Link and useParams from react-router-dom\nimport { Link, useParams } from 'react-router-dom';\n\n// import Axios from axios\nimport Axios from 'axios';\n\n// export the default component FormationElement\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormationElement = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [formation, setFormation] = useState([]);\n  useEffect(() => {\n    Axios.get(`http://localhost:5000/formations/${id}`).then(res => setFormation(res.data)).catch(err => console.log(err));\n  }, [id]);\n\n  // define student information variables with useState\n  const [studentFirstName, setStudentFirstName] = useState(\"\");\n  const [studentLastName, setStudentLastName] = useState(\"\");\n  const [studentEmail, setStudentEmail] = useState(\"\");\n  const [studentSection, setStudentSection] = useState(\"\");\n  const [studentCode, setStudentCode] = useState(\"\");\n\n  // define some constraints to allow students subscribed to the web app for submitting an inscription of a formation and prevent strangers from submitting requests with useState\n  const [allowedCodes, setAllowedCodes] = useState([]);\n  const [allowedFirstNames, setAllowedFirstNames] = useState([]);\n  const [allowedLastNames, setAllowedLastNames] = useState([]);\n  const [allowedSections, setAllowedSections] = useState([]);\n  const [allowedEmails, setAllowedEmails] = useState([]);\n  const [inscriptionsCount, setInscriptionsCount] = useState(0);\n\n  // while the formation becomes inaccessible, the button will be disabled\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  // extract the students data and define the constraints\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/students\").then(res => {\n      const codes = res.data.map(student => student.studentCode);\n      const firstnames = res.data.map(student => student.studentFirstName);\n      const lastnames = res.data.map(student => student.studentLastName);\n      const sections = res.data.map(student => student.studentSection);\n      const emails = res.data.map(student => student.studentEmail);\n      setAllowedCodes(codes);\n      setAllowedFirstNames(firstnames);\n      setAllowedLastNames(lastnames);\n      setAllowedSections(sections);\n      setAllowedEmails(emails);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // Get the inscriptions count from the backend when component mounts\n  useEffect(() => {\n    if (formation._id) {\n      Axios.get(`http://localhost:5000/formations/${formation._id}`).then(res => {\n        const storedCount = res.data.inscriptionsCount;\n        if (storedCount) {\n          setInscriptionsCount(storedCount);\n        }\n      }).catch(err => console.log(err));\n    }\n  }, [formation._id]);\n\n  // define the condition in which the formation submission becomes impossible\n  useEffect(() => {\n    if (inscriptionsCount >= formation.formationCapacity) {\n      setIsButtonDisabled(true);\n    }\n  }, [inscriptionsCount, formation.formationCapacity]);\n\n  // the function submitInscription which send inscription data to the database\n  const submitInscription = () => {\n    if (inscriptionsCount <= formation.formationCapacity) {\n      if (studentFirstName.trim() !== '' && studentLastName.trim() !== '' && studentEmail.trim() !== '' && studentEmail.match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/) && studentSection !== '' && !isNaN(studentCode)) {\n        if (allowedCodes.includes(Number(studentCode)) && allowedFirstNames.includes(studentFirstName) && allowedLastNames.includes(studentLastName) && allowedSections.includes(studentSection) && allowedEmails.includes(studentEmail)) {\n          Axios.post(\"http://localhost:5000/submitAnInscriptionFormation\", {\n            formationName: formation.formationName,\n            formationId: formation._id,\n            formateurFirstName: formation.formateurFirstName,\n            formateurLastName: formation.formateurLastName,\n            studentFirstName: studentFirstName,\n            studentLastName: studentLastName,\n            studentEmail: studentEmail,\n            studentSection: studentSection,\n            studentCode: studentCode\n          }).then(res => {\n            console.log(res.data);\n            setStudentFirstName(\"\");\n            setStudentLastName(\"\");\n            setStudentEmail(\"\");\n            setStudentCode(\"\");\n            setStudentSection(\"\");\n            document.getElementById(\"myForm\").reset();\n            document.getElementById(\"section\").selectedIndex = 0;\n          }).catch(err => {\n            if (err.response && err.response.status === 400) {\n              alert(err.response.data.message);\n              document.getElementById(\"myForm\").reset();\n              document.getElementById(\"section\").selectedIndex = 0;\n            } else {\n              console.log(err);\n              alert(\"An error occurred. Please try again later.\");\n            }\n          });\n        } else {\n          alert(\"This student does not exist. Please make sure you are from our family\");\n        }\n      } else {\n        alert(\"Please fill in all required fields or make sure you are providing valid information\");\n      }\n    } else {\n      alert(\"The formation is already full. Make sure you will come earlier in next events\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name : \", formation.formationName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Identifier : \", formation._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Capacity: \", formation.formationCapacity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Start date: \", formation.startDateFormation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sessions number: \", formation.sessionsNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", formation.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Formateur first name: \", formation.formateurFirstName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Formateur last name: \", formation.formateurLastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"myForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Student first name\",\n        onChange: e => setStudentFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Student last name\",\n        onChange: e => setStudentLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        placeholder: \"Student email\",\n        onChange: e => setStudentEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Student code\",\n        onChange: e => setStudentCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"section\",\n        required: true,\n        onChange: e => setStudentSection(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          value: \"\",\n          children: \"Please select a section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"GT\",\n          children: \"GT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"GII\",\n          children: \"GII\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"GEC\",\n          children: \"GEC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"IDSD\",\n          children: \"IDSD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitInscription,\n        disabled: isButtonDisabled,\n        children: \"Enroll now !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/formations\",\n        children: \"Return to formations page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(FormationElement, \"F5HIXEq3RUr+ZrQP0rSfKLVf7yc=\", false, function () {\n  return [useParams];\n});\n_c = FormationElement;\nvar _c;\n$RefreshReg$(_c, \"FormationElement\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","Axios","jsxDEV","_jsxDEV","FormationElement","_s","id","formation","setFormation","get","then","res","data","catch","err","console","log","studentFirstName","setStudentFirstName","studentLastName","setStudentLastName","studentEmail","setStudentEmail","studentSection","setStudentSection","studentCode","setStudentCode","allowedCodes","setAllowedCodes","allowedFirstNames","setAllowedFirstNames","allowedLastNames","setAllowedLastNames","allowedSections","setAllowedSections","allowedEmails","setAllowedEmails","inscriptionsCount","setInscriptionsCount","isButtonDisabled","setIsButtonDisabled","codes","map","student","firstnames","lastnames","sections","emails","_id","storedCount","formationCapacity","submitInscription","trim","match","isNaN","includes","Number","post","formationName","formationId","formateurFirstName","formateurLastName","document","getElementById","reset","selectedIndex","response","status","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","startDateFormation","sessionsNumber","price","type","required","placeholder","onChange","e","target","value","disabled","selected","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/ghaze/OneDrive/Bureau/PFA new version 1/PFA new version/application/src/Pages/FormationPage/FormationElement.js"],"sourcesContent":["// import React, useEffect and useState from react\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// import Link and useParams from react-router-dom\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n// import Axios from axios\r\nimport Axios from 'axios';\r\n\r\n// export the default component FormationElement\r\nexport const FormationElement = () => {\r\n\r\n  const { id } = useParams();\r\n\r\n  const [formation, setFormation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios\r\n      .get(`http://localhost:5000/formations/${id}`)\r\n      .then((res) => setFormation(res.data))\r\n      .catch((err) => console.log(err));\r\n  }, [id]);\r\n\r\n  // define student information variables with useState\r\n  const [studentFirstName, setStudentFirstName] = useState(\"\");\r\n  const [studentLastName, setStudentLastName] = useState(\"\");\r\n  const [studentEmail, setStudentEmail] = useState(\"\");\r\n  const [studentSection, setStudentSection] = useState(\"\");\r\n  const [studentCode, setStudentCode] = useState(\"\");\r\n\r\n  // define some constraints to allow students subscribed to the web app for submitting an inscription of a formation and prevent strangers from submitting requests with useState\r\n  const [allowedCodes, setAllowedCodes] = useState([]);\r\n  const [allowedFirstNames, setAllowedFirstNames] = useState([]);\r\n  const [allowedLastNames, setAllowedLastNames] = useState([]);\r\n  const [allowedSections, setAllowedSections] = useState([]);\r\n  const [allowedEmails, setAllowedEmails] = useState([]);\r\n\r\n  const [inscriptionsCount, setInscriptionsCount] = useState(0)\r\n\r\n  // while the formation becomes inaccessible, the button will be disabled\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\r\n\r\n  // extract the students data and define the constraints\r\n  useEffect(() => {\r\n    Axios\r\n      .get(\"http://localhost:5000/students\")\r\n      .then((res) => {\r\n        const codes = res.data.map((student) => student.studentCode);\r\n        const firstnames = res.data.map((student) => student.studentFirstName);\r\n        const lastnames = res.data.map((student) => student.studentLastName);\r\n        const sections = res.data.map((student) => student.studentSection);\r\n        const emails = res.data.map((student) => student.studentEmail);\r\n        setAllowedCodes(codes);\r\n        setAllowedFirstNames(firstnames);\r\n        setAllowedLastNames(lastnames);\r\n        setAllowedSections(sections);\r\n        setAllowedEmails(emails);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n\r\n  // Get the inscriptions count from the backend when component mounts\r\n  useEffect(() => {\r\n    if (formation._id) {\r\n    Axios.get(`http://localhost:5000/formations/${formation._id}`)\r\n      .then(res => {\r\n        const storedCount = res.data.inscriptionsCount;\r\n        if (storedCount) {\r\n          setInscriptionsCount(storedCount);\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n    }\r\n  }, [formation._id]);\r\n\r\n\r\n  // define the condition in which the formation submission becomes impossible\r\n  useEffect(() => {\r\n    if (inscriptionsCount >= formation.formationCapacity) {\r\n      setIsButtonDisabled(true);\r\n    }\r\n  }, [inscriptionsCount, formation.formationCapacity]);\r\n\r\n  // the function submitInscription which send inscription data to the database\r\n  const submitInscription = () => {\r\n\r\n    if (inscriptionsCount <= formation.formationCapacity) {\r\n      if(\r\n        studentFirstName.trim() !== '' &&\r\n        studentLastName.trim() !== '' &&\r\n        studentEmail.trim() !== '' &&\r\n        studentEmail.match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/) &&\r\n        studentSection !== '' &&\r\n        !isNaN(studentCode)\r\n      ) {\r\n        if (\r\n          allowedCodes.includes(Number(studentCode)) &&\r\n          allowedFirstNames.includes(studentFirstName) &&\r\n          allowedLastNames.includes(studentLastName) &&\r\n          allowedSections.includes(studentSection) &&\r\n          allowedEmails.includes(studentEmail)\r\n        ) {\r\n            Axios.post(\"http://localhost:5000/submitAnInscriptionFormation\", {\r\n                  formationName : formation.formationName,\r\n                  formationId : formation._id,\r\n                  formateurFirstName : formation.formateurFirstName,\r\n                  formateurLastName : formation.formateurLastName,\r\n                  studentFirstName : studentFirstName,\r\n                  studentLastName : studentLastName,\r\n                  studentEmail : studentEmail,\r\n                  studentSection : studentSection,\r\n                  studentCode : studentCode,\r\n              })\r\n              .then(res => {\r\n                  console.log(res.data);\r\n                  setStudentFirstName(\"\");\r\n                  setStudentLastName(\"\");\r\n                  setStudentEmail(\"\");\r\n                  setStudentCode(\"\");\r\n                  setStudentSection(\"\");\r\n                  document.getElementById(\"myForm\").reset();\r\n                  document.getElementById(\"section\").selectedIndex = 0;\r\n              })\r\n              .catch((err) => {\r\n                if (err.response && err.response.status === 400) {\r\n                  alert(err.response.data.message);\r\n                  document.getElementById(\"myForm\").reset();\r\n                  document.getElementById(\"section\").selectedIndex = 0;\r\n                } else {\r\n                  console.log(err);\r\n                  alert(\"An error occurred. Please try again later.\");\r\n                }\r\n              });\r\n          } else {\r\n            alert(\"This student does not exist. Please make sure you are from our family\");\r\n          }\r\n    } else {\r\n      alert(\"Please fill in all required fields or make sure you are providing valid information\");\r\n    }\r\n} else {\r\n  alert(\"The formation is already full. Make sure you will come earlier in next events\");\r\n  }\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h1>Name : {formation.formationName}</h1>\r\n      <h2>Identifier : {formation._id}</h2>\r\n      <h5>Capacity: {formation.formationCapacity}</h5>\r\n      <p>Start date: {formation.startDateFormation}</p>\r\n      <p>Sessions number: {formation.sessionsNumber}</p>\r\n      <p>Price: {formation.price}</p>\r\n      <p>Formateur first name: {formation.formateurFirstName}</p>\r\n      <p>Formateur last name: {formation.formateurLastName}</p>\r\n\r\n    <form id='myForm'>\r\n\r\n      <input type='text' required placeholder='Student first name' onChange={e => setStudentFirstName(e.target.value)} />\r\n\r\n      <input type='text' required placeholder='Student last name' onChange={e => setStudentLastName(e.target.value)} />\r\n\r\n      <input type='email' required placeholder='Student email' onChange={e => setStudentEmail(e.target.value)} />\r\n      \r\n      <input type=\"text\" required placeholder=\"Student code\" onChange={(e) => setStudentCode(e.target.value)} />\r\n      \r\n      <select id='section' required  onChange={e => setStudentSection(e.target.value)}>\r\n        <option disabled selected value=\"\">Please select a section</option>\r\n        <option value='GT'>GT</option>\r\n        <option value='GII'>GII</option>\r\n        <option value='GEC'>GEC</option>\r\n        <option value='IDSD'>IDSD</option>\r\n      </select>\r\n\r\n      <button onClick={submitInscription} disabled={isButtonDisabled}>Enroll now !</button>\r\n\r\n      </form>\r\n\r\n      <span><Link to='/formations'>Return to formations page</Link></span>\r\n\r\n    </div>\r\n\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}